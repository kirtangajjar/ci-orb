# PHP CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-php/ for more details
#
version: 2.1
description: This is an inline job
orbs:
  default-config:
    jobs:
      build:
        docker: # use the docker executor type; machine and macos executors are also supported
          # specify the version you desire here
          - image: rtcamp/ci-deployer:circleci
        steps:
          - checkout # check out the code in the project directory
          - restore_cache: # Caches dependencies with a cache key
              # template for an environment variable,
              # see circleci.com/docs/2.0/caching/
              key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
              paths:
                - vendor
                - ~/.composer/cache
          - save_cache: # Caches dependencies with a cache key
              # template for an environment variable,
              # see circleci.com/docs/2.0/caching/
              key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
              paths:
                - vendor
                - ~/.composer/cache
          - run:
              name: PHPCS
              command: |
                echo Running phpcs script
                source ./.circleci/setup-phpcs.sh
                lint_php_files
      deploy:
        docker: # use the docker executor type; machine and macos executors are also supported
              # specify the version you desire here
              - image: rtcamp/ci-deployer:circleci
              - image: mysql:5.7
                command: mysqld --character-set-server=utf8mb4 --collation-server=utf8mb4_bin --innodb-large-prefix=true --innodb-file-format=Barracuda
                environment:
                    MYSQL_USER: root
                    MYSQL_ROOT_PASSWORD: root
                    MYSQL_HOST: 127.0.0.1
                    MYSQL_DATABASE: wp
        steps:
          - checkout # check out the code in the project directory
          - restore_cache: # Caches dependencies with a cache key
              # template for an environment variable,
              # see circleci.com/docs/2.0/caching/
              key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
              paths:
                - vendor
                - ~/.composer/cache
          - save_cache: # Caches dependencies with a cache key
              # template for an environment variable,
              # see circleci.com/docs/2.0/caching/
              key: v1-repo-{{ .Environment.CIRCLE_SHA1 }}
              paths:
                - vendor
                - ~/.composer/cache
          - run:
              name: SSH Key setup
              command: | 
                echo "-----BEGIN RSA PRIVATE KEY-----" > key_file
                echo $<<parameters.server>> > temp_key_file 
                tr ' ' '\n' < temp_key_file >> key_file
                echo "-----END RSA PRIVATE KEY-----" >> key_file
                cat key_file
                mv key_file ~/.ssh/id_rsa
                chmod 400 ~/.ssh/id_rsa
                echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
                ssh root@dev5-rt-gw.do.rstuff.in "touch ci-tesst"
          - run:
              name: install dockerize
              command: wget https://github.com/jwilder/dockerize/releases/download/$DOCKERIZE_VERSION/dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && tar -C /usr/local/bin -xzvf dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz && rm dockerize-linux-amd64-$DOCKERIZE_VERSION.tar.gz
              environment:
                DOCKERIZE_VERSION: v0.3.0
          - run:
              name: Deploy
              command: |
                composer require vlucas/phpdotenv --dev
                export PATH="$PATH:$COMPOSER_HOME/vendor/bin"
                export PROJECT_ROOT="$(pwd)"
                source ./.circleci/install_test_wp.sh
                mv ./.circleci/deploy.php deploy.php
                if [[ -z ${IS_VIP+x} ]]; then echo 'Non VIP'; else if [[ "$IS_VIP"=="yes" ]]; then source ./.circleci/install_mu_plugins.sh; fi; fi
                export build_root
                dep deploy $CIRCLE_BRANCH
        parameters:
          server:
            type: string

workflows:
    version: 2
    build_and_deploy:
       jobs:
       - default-config/build:
          filters:
             branches:
               only:
               - develop
               - master
       - default-config/deploy:
          context: org-global
          server: dev5
          filters:
            branches:
              only:
              - develop
              - master
